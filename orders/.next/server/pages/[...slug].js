"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/[...slug]";
exports.ids = ["pages/[...slug]"];
exports.modules = {

/***/ "./pages/[...slug].js":
/*!****************************!*\
  !*** ./pages/[...slug].js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var nextjs_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nextjs-shared */ \"nextjs-shared\");\n/* harmony import */ var nextjs_shared__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nextjs_shared__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,nextjs_shared__WEBPACK_IMPORTED_MODULE_0__.createFederatedCatchAll)(({\"home\":()=> Promise.resolve(\"home@http://localhost:3001/_next/static/ssr/remoteEntry.js\").then((remoteConfig)=>{\n    console.log('remoteConfig runtime',remoteConfig);\n    global.REMOTE_CONFIG[\"home\"] = remoteConfig;\n    \n              var __webpack_require__ = __webpack_require__ ? __webpack_require__ : typeof arguments !== 'undefined' ? arguments[2] : false;\n               \n    function executeLoad(remoteUrl) {\n        const scriptUrl = remoteUrl.split(\"@\")[1];\n        const moduleName = remoteUrl.split(\"@\")[0];\n        console.log(\"executing remote load\", scriptUrl);\n        return new Promise(function (resolve, reject) {\n   \n         (global.webpackChunkLoad || fetch)(scriptUrl).then(function(res){\n            return res.text();\n          }).then(function(scriptContent){\n         \n          // const remote = eval(scriptContent + '\\n  try{' + moduleName + '}catch(e) { null; };');\n            try {\n              const remote = eval('let exports = {};' + scriptContent + 'exports');\n              resolve(remote[moduleName])\n            } catch(e) {\n              console.error('problem executing remote module', moduleName);\n              reject(e);\n            }\n          }).catch((e)=>{\n            console.error('failed to fetch remote', moduleName, scriptUrl);\n            console.error(e);\n            reject(null)\n          })\n        }).catch((e)=>{\n        console.error('error',e);\n          console.warn(moduleName,'is offline, returning fake remote')\n          return {\n            fake: true,\n            get:(arg)=>{\n              console.log('faking', arg,'module on', moduleName);\n\n              return ()=> Promise.resolve();\n            },\n            init:()=>{}\n          }\n        })\n    }\n\n        global.loadedRemotes = global.loadedRemotes || {};\n        if (global.loadedRemotes[\"home\"]) {\n          return global.loadedRemotes[\"home\"]\n        }\n        // if using modern output, then there are no arguments on the parent function scope, thus we need to get it via a window global.\n\n      var shareScope = (__webpack_require__ && __webpack_require__.S) ? __webpack_require__.S : global.__webpack_share_scopes__\n      var name = \"home\"\n      \n    const loadTemplate = (remotesConfig) => new Promise((res) => {\n      console.log('in template promise',JSON.stringify(remotesConfig))\n        executeLoad(remotesConfig).then((remote) => {\n\n          return Promise.resolve(remote.init(shareScope.default)).then(() => {\n            return remote\n          })\n        })\n          .then(function (remote) {\n            const proxy = {\n              get: remote.get,\n              chunkMap: remote.chunkMap,\n              path: remotesConfig.toString(),\n              init: (arg) => {\n                try {\n                  return remote.init(shareScope.default)\n                } catch (e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            }\n            if (remote.fake) {\n              res(proxy);\n              return null\n            }\n\n            Object.assign(global.loadedRemotes, {\n              [name]: proxy\n            });\n\n            res(global.loadedRemotes[name])\n          })\n\n\n      });\n    return loadTemplate(remoteConfig)\n    }),\"orders\":()=> Promise.resolve(\"orders@http://localhost:3002/_next/static/ssr/remoteEntry.js\").then((remoteConfig)=>{\n    console.log('remoteConfig runtime',remoteConfig);\n    global.REMOTE_CONFIG[\"orders\"] = remoteConfig;\n    \n              var __webpack_require__ = __webpack_require__ ? __webpack_require__ : typeof arguments !== 'undefined' ? arguments[2] : false;\n               \n    function executeLoad(remoteUrl) {\n        const scriptUrl = remoteUrl.split(\"@\")[1];\n        const moduleName = remoteUrl.split(\"@\")[0];\n        console.log(\"executing remote load\", scriptUrl);\n        return new Promise(function (resolve, reject) {\n   \n         (global.webpackChunkLoad || fetch)(scriptUrl).then(function(res){\n            return res.text();\n          }).then(function(scriptContent){\n         \n          // const remote = eval(scriptContent + '\\n  try{' + moduleName + '}catch(e) { null; };');\n            try {\n              const remote = eval('let exports = {};' + scriptContent + 'exports');\n              resolve(remote[moduleName])\n            } catch(e) {\n              console.error('problem executing remote module', moduleName);\n              reject(e);\n            }\n          }).catch((e)=>{\n            console.error('failed to fetch remote', moduleName, scriptUrl);\n            console.error(e);\n            reject(null)\n          })\n        }).catch((e)=>{\n        console.error('error',e);\n          console.warn(moduleName,'is offline, returning fake remote')\n          return {\n            fake: true,\n            get:(arg)=>{\n              console.log('faking', arg,'module on', moduleName);\n\n              return ()=> Promise.resolve();\n            },\n            init:()=>{}\n          }\n        })\n    }\n\n        global.loadedRemotes = global.loadedRemotes || {};\n        if (global.loadedRemotes[\"orders\"]) {\n          return global.loadedRemotes[\"orders\"]\n        }\n        // if using modern output, then there are no arguments on the parent function scope, thus we need to get it via a window global.\n\n      var shareScope = (__webpack_require__ && __webpack_require__.S) ? __webpack_require__.S : global.__webpack_share_scopes__\n      var name = \"orders\"\n      \n    const loadTemplate = (remotesConfig) => new Promise((res) => {\n      console.log('in template promise',JSON.stringify(remotesConfig))\n        executeLoad(remotesConfig).then((remote) => {\n\n          return Promise.resolve(remote.init(shareScope.default)).then(() => {\n            return remote\n          })\n        })\n          .then(function (remote) {\n            const proxy = {\n              get: remote.get,\n              chunkMap: remote.chunkMap,\n              path: remotesConfig.toString(),\n              init: (arg) => {\n                try {\n                  return remote.init(shareScope.default)\n                } catch (e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            }\n            if (remote.fake) {\n              res(proxy);\n              return null\n            }\n\n            Object.assign(global.loadedRemotes, {\n              [name]: proxy\n            });\n\n            res(global.loadedRemotes[name])\n          })\n\n\n      });\n    return loadTemplate(remoteConfig)\n    }),\"itemcatalogue\":()=> Promise.resolve(\"itemcatalogue@http://localhost:3000/_next/static/ssr/remoteEntry.js\").then((remoteConfig)=>{\n    console.log('remoteConfig runtime',remoteConfig);\n    global.REMOTE_CONFIG[\"itemcatalogue\"] = remoteConfig;\n    \n              var __webpack_require__ = __webpack_require__ ? __webpack_require__ : typeof arguments !== 'undefined' ? arguments[2] : false;\n               \n    function executeLoad(remoteUrl) {\n        const scriptUrl = remoteUrl.split(\"@\")[1];\n        const moduleName = remoteUrl.split(\"@\")[0];\n        console.log(\"executing remote load\", scriptUrl);\n        return new Promise(function (resolve, reject) {\n   \n         (global.webpackChunkLoad || fetch)(scriptUrl).then(function(res){\n            return res.text();\n          }).then(function(scriptContent){\n         \n          // const remote = eval(scriptContent + '\\n  try{' + moduleName + '}catch(e) { null; };');\n            try {\n              const remote = eval('let exports = {};' + scriptContent + 'exports');\n              resolve(remote[moduleName])\n            } catch(e) {\n              console.error('problem executing remote module', moduleName);\n              reject(e);\n            }\n          }).catch((e)=>{\n            console.error('failed to fetch remote', moduleName, scriptUrl);\n            console.error(e);\n            reject(null)\n          })\n        }).catch((e)=>{\n        console.error('error',e);\n          console.warn(moduleName,'is offline, returning fake remote')\n          return {\n            fake: true,\n            get:(arg)=>{\n              console.log('faking', arg,'module on', moduleName);\n\n              return ()=> Promise.resolve();\n            },\n            init:()=>{}\n          }\n        })\n    }\n\n        global.loadedRemotes = global.loadedRemotes || {};\n        if (global.loadedRemotes[\"itemcatalogue\"]) {\n          return global.loadedRemotes[\"itemcatalogue\"]\n        }\n        // if using modern output, then there are no arguments on the parent function scope, thus we need to get it via a window global.\n\n      var shareScope = (__webpack_require__ && __webpack_require__.S) ? __webpack_require__.S : global.__webpack_share_scopes__\n      var name = \"itemcatalogue\"\n      \n    const loadTemplate = (remotesConfig) => new Promise((res) => {\n      console.log('in template promise',JSON.stringify(remotesConfig))\n        executeLoad(remotesConfig).then((remote) => {\n\n          return Promise.resolve(remote.init(shareScope.default)).then(() => {\n            return remote\n          })\n        })\n          .then(function (remote) {\n            const proxy = {\n              get: remote.get,\n              chunkMap: remote.chunkMap,\n              path: remotesConfig.toString(),\n              init: (arg) => {\n                try {\n                  return remote.init(shareScope.default)\n                } catch (e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            }\n            if (remote.fake) {\n              res(proxy);\n              return null\n            }\n\n            Object.assign(global.loadedRemotes, {\n              [name]: proxy\n            });\n\n            res(global.loadedRemotes[name])\n          })\n\n\n      });\n    return loadTemplate(remoteConfig)\n    })})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9bLi4uc2x1Z10uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdEO0FBRXhELGlFQUFlQSxzRUFBdUIsQ0FBQ0M7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsUUFBbUIsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3JkZXJzLy4vcGFnZXMvWy4uLnNsdWddLmpzP2E2MWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRmVkZXJhdGVkQ2F0Y2hBbGwgfSBmcm9tICduZXh0anMtc2hhcmVkJztcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlRmVkZXJhdGVkQ2F0Y2hBbGwocHJvY2Vzcy5lbnYuUkVNT1RFUyk7XG4iXSwibmFtZXMiOlsiY3JlYXRlRmVkZXJhdGVkQ2F0Y2hBbGwiLCJwcm9jZXNzIiwiZW52IiwiUkVNT1RFUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/[...slug].js\n");

/***/ }),

/***/ "nextjs-shared":
/*!********************************!*\
  !*** external "nextjs-shared" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("nextjs-shared");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/[...slug].js"));
module.exports = __webpack_exports__;

})();